@using PaulSchool.Models
@model PagedList.IPagedList<PaulSchool.Models.Course>

@{
    ViewBag.Title = "ApplyToCourse";
}

<h2>Apply to a Course</h2>

@using (Html.BeginForm())
{
    <p>
        Find by course title: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string) &nbsp;
        <input type="submit" value="Search" /></p>
}
<table>
    <tr>
        <th></th>
        <th>
            @Html.ActionLink("Title", "ApplyToCourse", new {sortOrder = ViewBag.TitleSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Start Date", "ApplyToCourse", new {sortOrder = ViewBag.StartDateSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Hours", "ApplyToCourse", new {sortOrder = ViewBag.CreditsSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Instructor", "ApplyToCourse", new {sortOrder = ViewBag.InstructorSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Attending Days", "ApplyToCourse", new {sortOrder = ViewBag.AttendingDaysSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Attendance Cap", "ApplyToCourse", new {sortOrder = ViewBag.AttendanceCapSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Location", "ApplyToCourse", new {sortOrder = ViewBag.LocationSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Parish", "ApplyToCourse", new {sortOrder = ViewBag.ParishSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Description", "ApplyToCourse", new {sortOrder = ViewBag.DescriptionSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            @Html.ActionLink("Cost", "ApplyToCourse", new {sortOrder = ViewBag.CostSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            Seats Available
        </th>
    </tr>

    @foreach (Course item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink("See details / sign up for course", "Details", new {id = item.CourseID})
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Credits)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Instructor.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AttendingDays)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AttendanceCap)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Parish)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cost)
            </td>
            <td>
                @{var seatsLeft = item.AttendanceCap - item.SeatsTaken;}
                @seatsLeft of @Html.DisplayFor(modelItem => item.AttendanceCap)
            </td>
        </tr>
    }

</table>

<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount
    &nbsp;
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "ApplyToCourse", new {page = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter})
        @Html.Raw("&nbsp;")
        ;
        @Html.ActionLink("< Prev", "ApplyToCourse", new {page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter})
    }
    else
    {
        @:<<
        @Html.Raw("&nbsp;")
        ;
        @:< Prev
    }
    &nbsp;
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >", "ApplyToCourse", new {page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter})
        @Html.Raw("&nbsp;")
        ;
        @Html.ActionLink(">>", "ApplyToCourse", new {page = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter})
    }
    else
    {
        @:Next >
        @Html.Raw("&nbsp;")
        @:>>
    }
</div>