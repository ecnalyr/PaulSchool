@using PaulSchool.Models
@model PaulSchool.Models.Course

@{
    ViewBag.Title = "Details";
}

<h2>@Html.DisplayFor(model => model.Title) Details</h2>
<p>    
    @{
        if (!string.IsNullOrEmpty(TempData["tempMessage"] as string))
        {
            <b class="error">@TempData["tempMessage"].ToString()</b>
        }
    }
</p>
@{
    if (Model != null)
    {
        using (Html.BeginForm("ApplyUsingDetails", "Course", FormMethod.Post))
        {
            <div class="display-field">
                @Html.HiddenFor(model => model.CourseID)
            </div>
            <fieldset>
                <div id="column-container">
                    <div id="column-1">
                        <div class="display-label">Title</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.Title)
                        </div>

                        <div class="display-label">Hours</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.Credits)
                        </div>

                        <div class="display-label">Elective (checked if elective)</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.Elective)
                        </div>
                
                        <div class="display-label">Location</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.Location)
                        </div>

                        <div class="display-label">Parish</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.Parish)
                        </div>

                        <div class="display-label">Description</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.Description)
                        </div>

                        <div class="display-label">Enrollment Fee (to be paid after enrolling)</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.Cost)
                        </div>
                    </div>
            
                    <div id="column-2">
                        <div class="display-label">Start Date</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.StartDate)
                        </div>

                        <div class="display-label">End Date</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.EndDate)
                        </div>

                        <div class="display-label">Start Time</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.StartTime)
                        </div>

                        <div class="display-label">End Time</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.EndTime)
                        </div>
                    </div>
            
                    <div id="column-3">
                        <div class="display-label">Year</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.Year)
                        </div>
                    
                        <div class="display-label">Total days of attendance</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.AttendingDays)
                        </div>

                        <div class="display-label">Attendance Cap</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.AttendanceCap)
                        </div>
                        
                        <div class="display-label">Seats left</div>
                        <div class="display-field">
                            @{
                                int seatsAvailable = Model.AttendanceCap - Model.SeatsTaken;
                            }
                            @seatsAvailable of @Html.DisplayFor(model => model.AttendanceCap)
                        </div>
                    </div>

                    <div id="column-4">
                        <div class ="display-label">Instructor</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.Instructor.FirstMidName) @Html.DisplayFor(model => model.Instructor.LastName) ( @Html.DisplayFor(model => model.Instructor.UserName) )
                        </div>
                        
                        <div class ="display-label">Email</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.Instructor.Email)
                        </div>
                        
                        <div class ="display-label">Instructor since:</div>
                        <div class="display-field">
                            @Html.DisplayFor(model => model.Instructor.EnrollmentDate)
                        </div>
                    </div>
                </div>


            

                @{
                    if (User.IsInRole("Administrator") || User.IsInRole("SuperAdministrator") || User.IsInRole("Instructor"))
                    {
                        <div class="administrative">
                            <div class="display-label">Administrative:</div>
                            <div class="display-label">Approved by Admin?</div>
                            <div class="display-field">
                                @Html.DisplayFor(model => model.Approved)
                                @{
                                    if ((User.IsInRole("Administrator") || User.IsInRole("SuperAdministrator")) && Model.Approved == false)
                                    {
                                        @Html.ActionLink("Clicking here will approve this course with its current details.", "ApproveCourse", new {id = Model.CourseID}, new {onclick = "return confirm('Are you sure you are ready to approve of this course?');"})
                                        <p>@Html.ActionLink("Clicking here will deny this course with its current details.  You will be given the option to offer an explanation on the following page.", "Delete", new {id = Model.CourseID}, new {onclick = "return confirm('Are you sure you want to deny this course?');"})</p>
                                    }
                                }
                            </div>

                            <div class="display-label">Marked as Complete?</div>
                            <div class="display-field">
                                @Html.DisplayFor(model => model.Completed)
                                @{
                                    if ((User.IsInRole("Administrator") || User.IsInRole("SuperAdministrator")) && Model.Completed == false)
                                    {
                                        @Html.ActionLink("Clicking here will complete this course", "CompleteCourse", "Attendance", new {id = Model.CourseID}, new {onclick = "return confirm('Are you sure you are ready to Archive this Course?  Administrators will not be able to edit this Course's attendance, grades, or comments after you do this.');"})
                                    }
                                }
                            </div>

                            <div class="display-label">Archived by Admin?</div>
                            <div class="display-field">
                                @Html.DisplayFor(model => model.Archived)
                                @{
                                    if ((User.IsInRole("Administrator") || User.IsInRole("SuperAdministrator")) && Model.Archived == false)
                                    {
                                        @Html.ActionLink("Clicking here will archive this course - this will make the class uneditable.", "ArchiveCourse", "Attendance", new {id = Model.CourseID}, new {onclick = "return confirm('Are you sure you are ready to archive this class?  This process is not reversible.');"})
                                    }
                                }
                            </div>
                            <div class="display-field">
                                @{
                                    if ((User.IsInRole("Administrator") || User.IsInRole("SuperAdministrator")) && Model.Approved == false)
                                    {
                                        <p>@Html.ActionLink("Click here to edit the details of the course", "EditCourse", new {id = Model.CourseID})</p>
                                    }
                                }
                            </div>

                            @{
                                if (User.IsInRole("Administrator"))
                                {
                                    <!-- As Viewable by Admin-->
                                    <div class="display-label">
                                        Quick view of enrolled students:
                                    </div>
                                    <div class="display-field">
                                        <table>
                                            <tr>
                                                <th>First and Middle Name</th>
                                                <th>Last Name</th>
                                                <th>Paid Fee?</th>
                                                @if (User.IsInRole("SuperAdministrator"))
                                                {
                                                    <th>Remove from course</th>
                                                }
                                            </tr>
                                            @foreach (Enrollment item in Model.Enrollments)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.ActionLink(item.Student.FirstMidName, "Details", "Student", new {id = item.Student.StudentID}, "a")
                                                    </td>
                                                    <td>
                                                        @Html.ActionLink(item.Student.LastName, "Details", "Student", new {id = item.Student.StudentID}, "a")
                                                    </td>
                                                    <td>
                                                        @{
                                                            string hasPaid = item.Paid ? "Yes" : "No";
                                                        }
                                                        @Html.Raw(hasPaid)
                                                        @if (item.Paid != true)
                                                        {
                                                            <span> </span>
                                                            @Html.ActionLink("Mark as paid", "MarkAsPaid", "Course", new {id = item.EnrollmentID}, new {onclick = "return confirm('Are you certain you want to mark this enrollment field as paid?  This is not reversible.');"})
                                                            ;
                                                        }
                                                    </td>
                                                    @if (User.IsInRole("SuperAdministrator"))
                                                    {
                                                        <td>
                                                            @Html.ActionLink("Remove", "RemoveFromCourse", new {id = item.EnrollmentID}, new {onclick = "return confirm('Are you absolutely certain that you want to remove this student from this Course?  This is not reversible.');"})
                                                        </td>
                                                    }
                                                </tr>
                                            }
                                        </table>
                                        <p>
                                            @Html.ActionLink("Click here to see attendance details of this course.", "AttendanceView", "Attendance", new {id = Model.CourseID}, null)  You are also able to modify other elements of the Course within this link if you are of the appropriate role.
                                        </p>
                                    </div>
                                }
                                if (User.IsInRole("Instructor") && !User.IsInRole("Administrator"))
                                {
                                    <div class="display-label">
                                        List of Students
                                    </div>
                                    <div class="display-field">
                                        <table>
                                            <tr>
                                                <th>First and Middle Name</th>
                                                <th>Last Name</th>
                                            </tr>
                                            @foreach (Enrollment item in Model.Enrollments)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.Student.FirstMidName)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.Student.LastName)
                                                    </td>
                                                </tr>
                                            }
                                        </table>
                                        <p>
                                            @Html.ActionLink("Click here to see attendance details of this Course.", "AttendanceView", "Attendance", new {id = Model.CourseID}, null)  You are also able to modify other elements of the Course within this link if you are of the appropriate role.
                                        </p>
                                    </div>
                                }
                            }
                        </div>
                    }
                }
                
                <p><input type="submit" value="Sign up for this course", new { onclick = " return confirm('Are you sure you are ready to sign up for this class?'); " }  /></p>

            </fieldset>
        }
    }
    else
    {
        <p>It appears that this Course has been deleted.</p>
    }

    <p>
        @Html.ActionLink("Back to List", "Index")
    </p>
}