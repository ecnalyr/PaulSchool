@model PaulSchool.Models.Course

@{
    ViewBag.Title = "EditCourse";
}

<h2>Administrative Course Edit</h2>
<p>As an Administrator you can edit every detail of this Course's details.  There are no helpers when inputting data to allow for flexibility - make sure you double check your data.</p>
<p>It is not recommended that you "Approve," "Complete," or "Archive" courses from this page as Instructors will not receive a proper notification of your actions.</p>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Course</legend>

        @Html.HiddenFor(model => model.CourseID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Credits)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Credits)
            @Html.ValidationMessageFor(model => model.Credits)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Elective)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Elective)
            @Html.ValidationMessageFor(model => model.Elective)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.InstructorID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.InstructorID)
            @Html.ValidationMessageFor(model => model.InstructorID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Year)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Year)
            @Html.ValidationMessageFor(model => model.Year)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AttendingDays)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AttendingDays)
            @Html.ValidationMessageFor(model => model.AttendingDays)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AttendanceCap)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AttendanceCap)
            @Html.ValidationMessageFor(model => model.AttendanceCap)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StartDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StartDate)
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EndDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EndDate)
            @Html.ValidationMessageFor(model => model.EndDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DurationHours)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DurationHours)
            @Html.ValidationMessageFor(model => model.DurationHours)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DurationMins)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DurationMins)
            @Html.ValidationMessageFor(model => model.DurationMins)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Location)
            @Html.ValidationMessageFor(model => model.Location)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Parish)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Parish)
            @Html.ValidationMessageFor(model => model.Parish)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Cost) (in dollars, example: 15.00)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Cost)
            @Html.ValidationMessageFor(model => model.Cost)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Approved)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Approved)
            @Html.ValidationMessageFor(model => model.Approved)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Completed)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Completed)
            @Html.ValidationMessageFor(model => model.Completed)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Archived)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Archived)
            @Html.ValidationMessageFor(model => model.Archived)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
